---
title: "RECODE GLES Panel"
subtitle: "Internet vs Social Media-Nutzung"
author:
- "Reimar ZEH"
- "[Lehrstuhl für Kommunikationswissenschaft](https://www.kowi.rw.fau.de)"
- "Filename: *Recode ZA6838-ZA7729*"
date: "`r format(Sys.time(), '%m.%d.%Y')`"
editor: source
toc: true
number-sections: true
highlight-style: pygments
theme: cosmo
format:
  html: 
    code-fold: true
    code-overflow: wrap
    html-math-method: katex
    self-contained: true
execute: 
  echo: false
  eval: true
  warning: false
editor_options: 
  chunk_output_type: console
---

# Session Setup

## Global settings & Notes

```{r}
# show chunk outputs in R-Markdown
knitr::opts_chunk$set(echo = TRUE)

# setting a seed
set.seed(42)
```

## Load Packages

```{r}
rm(list= ls()) # start clean ####
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sjlabelled,foreign,tidyverse,sjmisc,Hmisc,gt,gtExtras,panelr,
               here,fs,usethis,labelled,janitor,magrittr,qs,tictoc,
               psych,psychTools,easystats,irr,lavaan,semTools,semPlot,broom,tidySEM,GPArotation,factoextra,
               reghelper,DescTools)
```

## Prepare Lists

```{r}
DF = list()
```



# Prepare Analysis

## Load Data
```{r}
# load(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.Rda"))
# tic()
DF$orgdat = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_v6.qs"))
# source(here("script/models.R"))
# toc()
```
## Select Vars
```{r}
# DF$semdat = DF$orgdat %>% select(contains(c("_421","_170")) & !contains(c("_1701","_1702")) & !contains("flag") & !ends_with("y") & starts_with(c("kp17","kp18","kp19")))
# head(DF$semdat)

DF$gles.scales = list(tr = c("kp16_160a", "kp16_160b", "kp16_160j", "kp16_160p", "kp16_160q"),
                   pp = c("kp17_3103a","kp17_3103b","kp17_3103c","kp17_3103d","kp17_3103e","kp17_3103f","kp17_3103g","kp17_3103h"),
                   ex = c("kp17_060e","kp17_060l","kp17_060i","kp17_060j","kp17_060b","kp17_060d"),
                   ief = c("kp17_050k","kp17_050h"),
                   eef = c("kp17_050a","kp17_050e"),
                   cns = c("kp16_030a","kp16_030b","kp16_030c","kp16_030d"))

DF$afd_dat = DF$orgdat %>%
  select(ends_with("_430i"))

DF$semdat = DF$orgdat %>%
  select("lfdn", "kp1_2601", "kpa2_2601","kp1_2320", "kpx_2280","kp9_2320", "kpa2_2320", "kpx_2290s",
         all_of(DF$gles.scales$tr),all_of(DF$gles.scales$pp),
         all_of(DF$gles.scales$ex),all_of(DF$gles.scales$ief),
         all_of(DF$gles.scales$eef),all_of(DF$gles.scales$cns),
         starts_with(c("kp1_","kp16_","kp17_","kp18_","kp19_")) &
           ends_with(c("_010","_190bb","_430i","_1500","_020", "_770","_780", "_790")) & 
           !contains("flag") & !ends_with("y"))

DF$semdat_panel = DF$orgdat %>% 
  select(starts_with(c("kp10_","kp12_","kp14_")) & ends_with(c("_430i","_160p","_020"))) %>% 
  mutate(across(everything(), ~rec(., rec = "-99:-1=NA;else = copy"))) %>% 
  long_panel(., prefix = "kp", suffix = "_", periods = c("10","12","14"), label_location = "beginning")
```

## Recode Vars
```{r}
DF$semdat = DF$semdat %>% 
  mutate(gjahr = case_when(kpx_2290s == "1955 und frueher" ~ 1955, .default = as.numeric(kpx_2290s)))
DF$semdat = DF$semdat %>% mutate(male = rec(kpx_2280, rec = "2=0;else=copy"))

DF$semdat %<>% mutate(across(c("kp1_2601","kpa2_2601"), ~ as.numeric(as.character(.))),
                 across(c("kp1_2601","kpa2_2601"), ~rec(., rec = "-99:-1=NA; else = copy")),
                 kp1_2601 = if_else(is.na(kp1_2601), kpa2_2601, kp1_2601))
DF$semdat %<>% mutate(across(c("kp1_2320","kp9_2320","kpa2_2320"), ~ as.numeric(as.character(.))),
                   kp1_2320 = ifelse(kp1_2320 > 0 & kp9_2320 > 0, kp9_2320, kp1_2320), 
                   kp1_2320 = ifelse(kp1_2320 < 0 & kpa2_2320 > 0, kpa2_2320, kp1_2320))

DF$semdat %<>% mutate(school = rec(kp1_2320, rec = "-99:-1=NA;1,2=0;,3,4=1;5,9=2"))
DF$semdat %<>% mutate(wost = rec(kp1_2601, rec = "-99:-1=NA;1:11=0;12:16=1"))

DF$semdat %<>%  mutate(across(c(all_of(DF$gles.scales$tr)), ~rec(., rec = "-99:-1=NA; else = copy")))
DF$semdat %<>%  mutate(kp16_trust = rowSums(select(., all_of(DF$gles.scales$tr)), na.rm = F))

DF$semdat %<>%  mutate(across(c(all_of(DF$gles.scales$tr)), ~rec(., rec = "-99:-1=NA; else = copy")))
DF$semdat %<>%  mutate(kp16_trust = rowSums(select(., all_of(DF$gles.scales$tr)), na.rm = TRUE))

DF$semdat %<>%  mutate(across(c(all_of(DF$gles.scales$pp)), ~rec(., rec = "-99:-1=NA; else = copy")))
DF$semdat %<>%  mutate(kp17_popul = rowSums(select(., all_of(DF$gles.scales$pp)), na.rm = TRUE))

DF$semdat %<>%  mutate(across(c(all_of(DF$gles.scales$ex)), ~rec(., rec = "-99:-1=NA; else = copy")))
DF$semdat %<>%  mutate(kp17_extrem = ifelse(complete.cases(select(., all_of(DF$gles.scales$ex))), 
                                       rowSums(select(., all_of(DF$gles.scales$ex)), na.rm = TRUE), NA))
DF$semdat %<>%  mutate(across(c(all_of(DF$gles.scales$ief)), ~rec(., rec = "-99:-1=NA; else = copy")))
DF$semdat %<>%  mutate(kp17_ineff = ifelse(complete.cases(select(., all_of(DF$gles.scales$ief))), 
                                       rowSums(select(., all_of(DF$gles.scales$ief)), na.rm = TRUE), NA))
DF$semdat %<>%  mutate(across(c(all_of(DF$gles.scales$eef)), ~rec(., rec = "-99:-1=NA; else = copy")))
DF$semdat %<>%  mutate(kp17_exeff = ifelse(complete.cases(select(., all_of(DF$gles.scales$eef))), 
                                       rowSums(select(., all_of(DF$gles.scales$eef)), na.rm = TRUE), NA))
DF$semdat %<>%  mutate(across(c(all_of(DF$gles.scales$cns)), ~rec(., rec = "-99:-1=NA; else = copy")))
DF$semdat %<>%  mutate(kp16_consp = ifelse(complete.cases(select(., all_of(DF$gles.scales$cns))), 
                                       rowSums(select(., all_of(DF$gles.scales$cns)), na.rm = TRUE), NA))
# DF$semdat %>% select("kp16_consp") %>% frq
# DF$semdat %<>%  mutate(kp16_trust = ifelse(complete.cases(select(., "kp16_160a", "kp16_160b", "kp16_160j", "kp16_160p", "kp16_160q")), 
#                                        rowSums(select(., "kp16_160a", "kp16_160b", "kp16_160j", "kp16_160p", "kp16_160q"), na.rm = TRUE), NA))

DF$semdat %<>% mutate(across(ends_with(c("_010","_190bb","_430i","_1500","_020", "_770","_780", "_790")), ~rec(., rec = "-99:-1=NA; else = copy"))) # %>%   column_to_rownames(var = "lfdn")
DF$afd_dat %<>% mutate(across(ends_with("_430i"), ~rec(., rec = "-99:-1=NA; else = copy"))) # %>%   column_to_rownames(var = "lfdn")

DF$semdat = DF$semdat %>%  mutate(across(ends_with("190bb"), ~rec(.,rec ="322=1;else = 0")))
# DF$semdat %<>% mutate(across(contains("_170"), ~rec(., rec = "rev")))

```
## Aufstockerwellen zusammenführen
```{r}

DF$aufstock = DF$orgdat %>% select(contains("1621"))
DF$aufstock %<>% mutate(across(everything(), ~rec(., rec = "-99:-1=NA;else = copy")))

## Funktion um NA aus der Profilwelle mit Aufstockern zu überschreiben
johnny = function(mydata,i,j)
{
  tag <- c(i,j)
  lst <- lapply(tag, function(x) {mydata[grepl(x, colnames(mydata))] })
  ext <- lapply(seq_along(lst), function(x) {
    str_extract(colnames(lst[[x]]), pattern = "(?<=_)\\w{5}") })
  int <- intersect(ext[[1]], ext[[2]])
  match_list <- lapply(lst, function(x) {
    select(x, matches(paste(int, collapse = "|"))) })
  res <- mapply(function(x, y) { replace(x, is.na(x), y[is.na(x)]) }, 
                match_list[[1]], match_list[[2]])
  mydata[,colnames(res)] <- res
  return(mydata)
}

DF$aufstock = johnny(DF$aufstock,"kp1_1621","kpa1_1621") # Aufstocker a1
DF$aufstock = johnny(DF$aufstock,"kp1_1621","kpa2_1621") # Aufstocker a2
```

# Analysis
## Correlation
```{r}

DF$afd_dat %>% psych::cor.plot(.,stars = T)

DF$afd_pred = c("wost","school","gjahr","male","kp17_010","kp16_trust", "kp16_160p","kp17_popul", "kp17_extrem", "kp17_ineff", "kp17_exeff","kp16_consp","kp17_020","kp16_1500")

DF$semdat %>% select("kp17_430i",DF$afd_pred) %>% psych::cor.plot(.,stars = T)

DF$afd_cor =  
  cor(DF$semdat$kp17_430i, DF$semdat[, DF$afd_pred], use = "pairwise.complete.obs")
DF$afd_cor = DF$afd_cor[1,]
DF$afd_cor = data.frame(variable = DF$afd_pred, KorKof = DF$afd_cor) 


ggplot(DF$afd_cor, aes(y = reorder(variable, -KorKof), x = KorKof)) +
  geom_bar(stat = "identity", fill = "steelblue", width = 0.5) +
  geom_text(aes(label = round(KorKof, 2)), hjust = 1.2, size = 3) +
  labs(title = "Korrelation mit AfD-Sympathie", y = "Variables", x = "Correlation") +
  theme_minimal() + xlim(-0.5, +0.5)
```

## Hausmann-test
```{r, eval=FALSE}
names(DF$semdat_panel) = c("id","welle","afd","trust","democrazy")
# Assuming 'data' is your panel data with 'id' as the entity identifier and 'time' as the time variable
DF$plm$fe_model <- plm::plm(afd ~ trust + democrazy, DF$semdat_panel, index = c("id", "welle"), model = "within")
DF$plm$re_model <- plm::plm(afd ~ trust + democrazy, DF$semdat_panel, index = c("id", "welle"), model = "random")
plm::phtest(DF$plm$fe_model,DF$plm$re_model)

# broom::glance(fe_model) %>% mutate(across(everything(), ~round(., 3)))
# broom::tidy(fe_model,conf.int = TRUE, conf.level = 0.5) %>% mutate(across(where(is.double), ~round(., 3)))
# DF$plm %>% lapply(.,broom::glance)
# DF$plm %>% lapply(.,broom::tidy)

lapply(DF$plm, function(x) {
  glance_output <- broom::glance(x)
  tidy_output <- broom::tidy(x, conf.int = TRUE, conf.level = 0.5)
  # return(list(glance_output, tidy_output))
})

lapply(DF$plm, function(x) {
  glance_output <- broom::glance(x) %>%
    gt %>% fmt_number(decimals = 3, columns = "p.value")
  tidy_output <- broom::tidy(x, conf.int = TRUE, conf.level = 0.5) %>%
    gt %>% fmt_number(decimals = 3)
})

```


## OLS-Models
```{r}
DF$semdat %<>% mutate(across("kp1_2601", ~ as.factor(.)))
DF$lm$afd_sym1 = lm(kp17_430i ~ school + wost + male + gjahr, DF$semdat) 
DF$lm$afd_sym2 = lm(kp17_430i ~ school + wost + male + gjahr + 
                      kp16_1500 + kp17_010, DF$semdat) 
DF$lm$afd_sym3 = lm(kp17_430i ~ school + wost + male + gjahr + 
                      kp16_1500 + kp17_010 +
                      kp17_020 + kp16_trust + kp17_popul + kp17_extrem + kp17_popul + kp16_consp, DF$semdat) 

DF$lm$afd_wahl = lm(kp17_190bb ~ school + wost + male + gjahr + 
                      kp16_1500 + kp17_010 +
                      kp17_020 + kp16_trust + kp17_popul + kp17_extrem + kp17_popul + kp16_consp, DF$semdat) 
DF$glm$afd_wahl = glm(kp17_190bb ~ school + wost + male + gjahr + 
                      kp16_1500 + kp17_010 +
                      kp17_020 + kp16_trust + kp17_popul + kp17_extrem + kp17_popul + kp16_consp, DF$semdat, family = 'binomial') 

glance(DF$glm$afd_wahl)
tidy(DF$glm$afd_wahl)

map_df(DF$lm, broom::glance) %>% select(c("r.squared","adj.r.squared","statistic","p.value","nobs")) %>% 
  gt %>% 
    fmt_number(decimals = 2, columns = c("r.squared","adj.r.squared","statistic")) %>% 
    fmt_number(decimals = 3, columns = "p.value")

map_df(DF$lm, broom::tidy, conf.int = TRUE, conf.level = 0.5, .id = "model") %>% select(model, term, estimate) %>%
    spread(term, estimate) %>% gt

test1 = map_df(DF$lm, broom::tidy, .id = "Model") %>% select(c("estimate","std.error","p.value"))
test2 = map_df(DF$lm, parameters::standardise_parameters, .id = "Model") %>% select(c("Model","Parameter","Std_Coefficient"))
cbind(test2,test1) %>% gt %>% 
  fmt_number(decimals = 2) %>% gt_split(row_slice_i = c(5,12,24,36))





lapply(DF$lm, function(x) {
  glance_output <- broom::glance(x)
  tidy_output <- lm.beta::lm.beta(x) %>% broom::tidy(., conf.int = TRUE, conf.level = 0.5)
  return(list(glance_output, tidy_output))
})

lapply(DF$lm, function(x) {
  glance_output <- broom::glance(x) %>%
    gt %>% 
    fmt_number(decimals = 2, columns = c("r.squared","adj.r.squared","sigma","statistic")) %>% 
    fmt_number(decimals = 3, columns = "p.value")
  tidy_output <- lm.beta::lm.beta(x) %>% broom::tidy(., conf.int = TRUE, conf.level = 0.5) %>%
    gt %>% fmt_number(decimals = 2) %>% 
    tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,estimate,std_estimate), rows = p.value < 0.05)) %>% gt_theme_nytimes()
  return(list(glance_output, tidy_output)) 
})
# lapply-output in quarto geht nicht!
broom::glance(DF$lm$afd_sym3) %>% gt %>% 
    fmt_number(decimals = 2, columns = c("r.squared","adj.r.squared","sigma","statistic")) %>% 
    fmt_number(decimals = 3, columns = "p.value")

lm.beta::lm.beta(DF$lm$afd_sym3) %>% broom::tidy(., conf.int = TRUE, conf.level = 0.5) %>%
    gt %>% fmt_number(decimals = 2) %>% 
    tab_style(style = cell_fill(color = "lightgreen"), 
              locations = cells_body(columns = c(term,estimate,std_estimate), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()

broom::tidy(DF$glm$afd_wahl, conf.int = TRUE, conf.level = 0.5) %>%
    gt %>% fmt_number(decimals = 2) %>% 
    tab_style(style = cell_fill(color = "lightgreen"), 
              locations = cells_body(columns = c(term,estimate), rows = p.value < 0.05)) %>% 
  gt_theme_nytimes()
test = DescTools::PseudoR2(DF$glm$afd_wahl, which = "all")
test %>% as.data.frame() %>% rownames_to_column(var = "PseudoR") %>% gt %>% fmt_number(decimals = 3)

reghelper::beta(DF$glm$afd_wahl)
exp(cbind(OR = coef(DF$glm$afd_wahl), confint(DF$glm$afd_wahl))) %>% 
  as.data.frame() %>% rownames_to_column(var = "Varible") %>% 
  gt %>% fmt_number(decimals = 3)
```


::: {.hidden}
# Clutter {.unnumbered .unlisted}
```{r, eval=FALSE}
#| include: false
DF$hc17 = DF$semdat %>% select("kp17_010","kp17_1090","kp17_1130") %>% 
  hcut(., k = 6, stand=T, hc_func = "hclust", hc_method = "ward.D2", hc_metric = "euclidean")
fviz_cluster(DF$hc17)
fviz_silhouette(DF$hc17)
w17_clu <- cutree(DF$hc17, k = 6)
table(w17_clu)

DF$hc19 = DF$semdat %>% select("kp19_010","kp19_1090","kp19_1130") %>% 
  hcut(., k = 6, stand=T, hc_func = "hclust", hc_method = "ward.D2", hc_metric = "euclidean")
fviz_cluster(DF$hc19)
fviz_silhouette(DF$hc19)
w19_clu <- cutree(DF$hc19, k = 6)
table(w19_clu)



DF$semdat = cbind(DF$semdat,w17_clu,w19_clu)
table(DF$semdat$w17_clu , DF$semdat$w19_clu) %>% rcompanion::cramerV()
DF$semdat %>% group_by(w17_clu,w19_clu) %>% tally() %>% spread(w19_clu, n)


DF$semdat %>% group_by(w17_clu) %>% 
  summarise(m2 = mean(kp17_010), soec = mean(kp17_1090),autlib = mean(kp17_1130)) %>% 
  ggplot(aes(x=w17_clu)) + 
           geom_line(aes(y = m2, color = "PolInt")) +
           geom_line(aes(y = soec/1.4, color = "SozÖk")) +
           geom_line(aes(y = autlib/1.4, color = "Liberal")) +
    scale_y_continuous(sec.axis = sec_axis(~.*1.4, name=c("Orientierung")))


DF$semdat %>% group_by(w19_clu) %>% 
  summarise(m2 = mean(kp19_010), soec = mean(kp19_1090),autlib = mean(kp19_1130)) %>% 
  ggplot(aes(x=w19_clu)) + 
           geom_line(aes(y = m2, color = "PolInt")) +
           geom_line(aes(y = soec/1.4, color = "SozÖk")) +
           geom_line(aes(y = autlib/1.4, color = "Liberal")) +
    scale_y_continuous(sec.axis = sec_axis(~.*1.4, name=c("Orientierung")))
```
:::
