---
title: "RECODE GLES Panel"
subtitle: "MediaTrust vs AfD Sympathie"
author:
- "Reimar ZEH"
- "[Lehrstuhl für Kommunikationswissenschaft](https://www.kowi.rw.fau.de)"
- "Filename: *Recode ZA6838-ZA7729*"
date: "`r format(Sys.time(), '%m.%d.%Y')`"
editor: source
toc: true
number-sections: true
highlight-style: pygments
theme: cosmo
format:
  html: 
    code-fold: true
    code-overflow: wrap
    html-math-method: katex
    self-contained: true
execute: 
  echo: false
  eval: true
  warning: false
editor_options: 
  chunk_output_type: console
---

# Session Setup

## Global settings & Notes

```{r}
rm(list= ls()) # start clean ####
# show chunk outputs in R-Markdown
knitr::opts_chunk$set(echo = TRUE)

# global settings
options(
  scipen = 999, # deactivate scientific notation
  digits = 3, # activate the required number of decimal places
  max.print = 1000000,
  tibble.print_max = 100000,
  tibble.print_min = 100000
)

# setting a seed
set.seed(42)
```

## Load Packages

```{r}
rm(list= ls()) # start clean ####
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sjlabelled,foreign,tidyverse,sjmisc,Hmisc,panelr,gt,gtExtras,
               here,fs,usethis,labelled,janitor,magrittr,qs,tictoc,
               psych,easystats,irr,lavaan,semTools,semPlot,broom,tidySEM)
```

## Prepare Lists

```{r}
DF = list()
```

## Load Data

```{r}
# load(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.Rda"))
# tic()
DF$orgdat = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.qs"))
source(here("script/models.R"))
# toc()
```


# Prepare Analysis
## Select Vars
```{r}
DF$semdat = DF$orgdat %>% select(contains("_1621"), ends_with(c("_160p","_430i")) & starts_with(c("kp10","kp12","kp14")))
head(DF$semdat)
DF$semdat %<>% mutate(across(everything(), ~rec(., rec = "-99:-1=NA;else = copy")))

## Aufstockerwellen zusammenführen
## Funktion um NA aus der Profilwelle mit Aufstockern zu überschreiben
johnny = function(mydata,i,j)
{
  tag <- c(i,j)
  lst <- lapply(tag, function(x) {mydata[grepl(x, colnames(mydata))] })
  ext <- lapply(seq_along(lst), function(x) {
    str_extract(colnames(lst[[x]]), pattern = "(?<=_)\\w{5}") })
  int <- intersect(ext[[1]], ext[[2]])
  match_list <- lapply(lst, function(x) {
    select(x, matches(paste(int, collapse = "|"))) })
  res <- mapply(function(x, y) { replace(x, is.na(x), y[is.na(x)]) }, 
                match_list[[1]], match_list[[2]])
  mydata[,colnames(res)] <- res
  return(mydata)
}
DF$semdat = johnny(DF$semdat,"kp1_1621","kpa1_1621") # Aufstocker a1
DF$semdat = johnny(DF$semdat,"kp1_1621","kpa2_1621") # Aufstocker a2

DF$semdat %<>% select(!contains(c("kpa1","kpa2"))) # Austocker löschen


DF$semdat %<>% rename(x1 = kp10_160p, x2 = kp12_160p, x3 = kp14_160p,
                      y1 = kp10_430i, y2 = kp12_430i, y3 = kp14_430i)
```



## Check FRQ

```{r}
# tic()
DF$semdat %>% summary(.,maxsum = 20) %>% knitr::kable(.,format= 'markdown')

# toc()
```



## Check Correlations
```{r}
DF$semdat %>% select(!contains("1621")) %>% psych::cor.plot(.,stars = T)
# DF$semdat %>% psych::cor.plot(.,stars = T)

# DF$semdat_long %>% select(!"Welle") %>% 
#   mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy"))) %>%
#   drop_na() %>% 
#   psych::corr.test()
# DF$semdat %>% mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy"))) %>%
#   gather(key, value) %>% drop_na() %>% 
#   separate_wider_delim(key, delim = "_", names = c("Welle", "Var")) %>%
#   ggplot(aes(x = value, color = Welle)) +
#   geom_density(adjust = 1.6) + 
#   facet_wrap(vars(Var)) + 
#   theme_classic()

```

## Check ICC
```{r}
# ICC requires VARs to be numeric, even when they seem to are numeric -> mutate!

DF$semdat %>% select(contains(c("x"))) %>% 
                         irr::icc()
DF$semdat %>% select(contains(c("y"))) %>% 
                         irr::icc()
```


# SEM

## CLPM free
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_L, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% gt() %>% 
  fmt_number(decimals = 3, columns = c(cfi,tli,agfi,rmsea,srmr)) %>% gt_theme_nytimes()
broom::tidy(DF$sem.fit) %>% filter(.,op =="~" & grepl("Lx", term) & grepl("Ly", term)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% gt %>% 
  fmt_number(decimals = 2, columns = c(estimate,std.error,std.all)) %>% fmt_number(decimals = 3, columns = p.value) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,label,estimate,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## CLPM Latent 2 Lag
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_L2, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% gt() %>% 
  fmt_number(decimals = 3, columns = c(cfi,tli,agfi,rmsea,srmr)) %>% gt_theme_nytimes()
broom::tidy(DF$sem.fit) %>% filter(.,op =="~" & grepl("Lx", term) & grepl("Ly", term)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% gt %>% 
  fmt_number(decimals = 2, columns = c(estimate,std.error,std.all)) %>% fmt_number(decimals = 3, columns = p.value) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,label,estimate,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## RI-CLPM free
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% gt() %>% 
  fmt_number(decimals = 3, columns = c(cfi,tli,agfi,rmsea,srmr)) %>% gt_theme_nytimes()
broom::tidy(DF$ric.fit) %>% filter(.,op =="~" & grepl("Lx", term) & grepl("Ly", term)) %>% select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% gt %>% 
  fmt_number(decimals = 2, columns = c(estimate,std.error,std.all)) %>% fmt_number(decimals = 3, columns = p.value) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,label,estimate,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```
