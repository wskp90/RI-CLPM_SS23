---
title: "RECODE GLES Panel"
subtitle: "TV - pol. Wiss"
author:
- "Reimar ZEH"
- "[Lehrstuhl fÃ¼r Kommunikationswissenschaft](https://www.kowi.rw.fau.de)"
- "Filename: *Recode ZA6838"
date: "`r format(Sys.time(), '%m.%d.%Y')`"
editor: source
toc: true
number-sections: true
highlight-style: pygments
theme: cosmo
format:
  html: 
    code-fold: true
    code-overflow: wrap
    html-math-method: katex
    self-contained: true
execute: 
  echo: false
  eval: true
  warning: false
editor_options: 
  chunk_output_type: console
---

# Session Setup

## Global settings & Notes

```{r}
rm(list= ls()) # start clean ####
# show chunk outputs in R-Markdown
knitr::opts_chunk$set(echo = TRUE)

# global settings
options(
  scipen = 999, # deactivate scientific notation
  digits = 3, # activate the required number of decimal places
  max.print = 1000000,
  tibble.print_max = 100000,
  tibble.print_min = 100000
)

# setting a seed
set.seed(42)
```

## Load Packages

```{r}
rm(list= ls()) # start clean ####
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sjlabelled,foreign,tidyverse,sjmisc,Hmisc,flextable,
               here,fs,usethis,labelled,janitor,magrittr,qs,tictoc,
               psych,easystats,irr,lavaan,semTools,semPlot,broom,tidySEM)
```

## Prepare Lists

```{r}
DF = list()
```

## Load Data

```{r}
# load(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.Rda"))
# tic()
DF$orgdat = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_clpm.qs"))
source(here("script/models.R"))
# toc()
```


# Prepare Analysis
## Select Vars
```{r}
DF$semdat = DF$orgdat %>% select(ends_with(c("_tvpb","theta_pwk")) & starts_with(c("kp3","kp4","kp5","kp6","kp7")))
# head(DF$semdat)
# head(DF$semdat_long)
DF$semdat %<>% rename(x1 = kp3_tvpb, x2 = kp4_tvpb, x3 = kp5_tvpb,x4 = kp6_tvpb,x5 = kp7_tvpb,
                      y1 = kp3_theta_pwk, y2 = kp4_theta_pwk, y3 = kp5_theta_pwk, y4 = kp6_theta_pwk, y5 = kp7_theta_pwk)
# DF$semdat_long = DF$semdat %>% pivot_longer(cols = everything(), names_to = c("set",".value"), names_sep = "_")
```



## Check FRQ

```{r}
# tic()
DF$semdat %>% summary(.,maxsum = 20) %>% knitr::kable(.,format= 'markdown')

# toc()
```

## Prepare VARS
```{r}
DF$semdat %<>% mutate(across(everything(), ~rec(., rec = "-99:-90=NA;else = copy")))
```


## Check Correlations
```{r}
DF$semdat %>% psych::cor.plot(.,stars = T)
DF$semdat %>% pivot_longer(cols = everything(), names_to = c(".value", "Welle"), names_pattern = "(.)(.)") %>% select(!"Welle") %>% psych::corr.test()




# DF$semdat_long %>% select(!"Welle") %>% 
#   mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy"))) %>%
#   drop_na() %>% 
#   psych::corr.test()
# DF$semdat %>% mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy"))) %>%
#   gather(key, value) %>% drop_na() %>% 
#   separate_wider_delim(key, delim = "_", names = c("Welle", "Var")) %>%
#   ggplot(aes(x = value, color = Welle)) +
#   geom_density(adjust = 1.6) + 
#   facet_wrap(vars(Var)) + 
#   theme_classic()

```

## Check ICC
```{r}
# ICC requires VARs to be numeric, even when they seem to are numeric -> mutate!

DF$semdat %>% select(contains(c("x"))) %>% 
                         irr::icc()
DF$semdat %>% select(contains(c("y"))) %>% 
                         irr::icc()
```


# SEM

## CLPM fixed
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_L5C, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t5_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## CLPM free
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_L5, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t5_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## CLPM Latent 2 Lag
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_L2, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## RI-CLPM fixed
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm5C, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t5_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```


## RI-CLPM free
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm5, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t5_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```

### Sakaluk 5 GCLM
```{r}
tic()
DF$s_gcmlT5.fit<-sem(DF$s_gcmlT5, data=DF$semdat,estimator = "MLR", mimic="Mplus", meanstructure = T)
toc()
broom::glance(DF$s_gcmlT5.fit)%>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$s_gcmlT5.fit) %>% filter(., op == "~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
summary(DF$s_gcmlT5.fit, fit.measures = TRUE)
```

