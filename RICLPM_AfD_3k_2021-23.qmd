---
title: "RECODE GLES Panel"
subtitle: "MediaTrust vs AfD Sympathie"
author:
- "Reimar ZEH"
- "[Lehrstuhl fÃ¼r Kommunikationswissenschaft](https://www.kowi.rw.fau.de)"
- "Filename: *Recode ZA6838-ZA7729*"
date: "`r format(Sys.time(), '%m.%d.%Y')`"
editor: source
toc: true
number-sections: true
highlight-style: pygments
theme: cosmo
format:
  html: 
    code-fold: true
    code-overflow: wrap
    html-math-method: katex
    self-contained: true
execute: 
  echo: false
  eval: true
  warning: false
editor_options: 
  chunk_output_type: console
---

# Session Setup

## Global settings & Notes

```{r}
rm(list= ls()) # start clean ####
# show chunk outputs in R-Markdown
knitr::opts_chunk$set(echo = TRUE)

# global settings
options(
  scipen = 999, # deactivate scientific notation
  digits = 3, # activate the required number of decimal places
  max.print = 1000000,
  tibble.print_max = 100000,
  tibble.print_min = 100000
)

# setting a seed
set.seed(42)
```

## Load Packages

```{r}
rm(list= ls()) # start clean ####
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sjlabelled,foreign,tidyverse,sjmisc,Hmisc,panelr,gt,gtExtras,
               here,fs,usethis,labelled,janitor,magrittr,qs,tictoc,
               psych,easystats,irr,lavaan,semTools,semPlot,broom,tidySEM)
```

## Prepare Lists

```{r}
DF = list()
```

## Load Data

```{r}
# load(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.Rda"))
# tic()
DF$orgdat = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7730.qs"))
source(here("script/models.R"))
# toc()
```


# Prepare Analysis
## Select Vars
```{r}
DF$semdat = DF$orgdat %>% select(ends_with(c("_160p1","_160p2","_430i")) & starts_with(c("kp21","kp23","kp24")))
head(DF$semdat)
DF$semdat %<>% mutate(across(everything(), ~rec(., rec = "-99:-1=NA;else = copy")))
DF$semdat %<>% rename(x1 = kp21_160p1, x2 = kp23_160p1, x3 = kp24_160p1,
                      y1 = kp21_430i,  y2 = kp23_430i,  y3 = kp24_430i,
                      z1 = kp21_160p2, z2 = kp23_160p2, z3 = kp24_160p2)
```

```{r}
DF$long = tidyr::gather(DF$semdat, key = "Variable", value = "Value", y1, y2, y3)
ggplot(DF$long, aes(x = Variable, y = Value)) +
  geom_boxplot() +
  labs(title = "Boxplot for Variables", x = "Variable", y = "Value") +
  stat_summary(fun = mean, geom = "point", shape = 18, size = 3, color = "red") +
  labs(title = "Boxplot with Mean Points for Variables", x = "Variable", y = "Value") +
  scale_color_brewer(palette="Dark2")
```


## Check FRQ

```{r}
# tic()
DF$semdat %>% summary(.,maxsum = 20) %>% knitr::kable(.,format= 'markdown')

# toc()
```

## Prepare VARS
```{r}
# DF$semdat %<>% mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93,-71=NA;else = copy")))
# names(DF$semdat)<- c("m1", "m2", "m3", "w1", "w2", "w3")
```


## Check Correlations
```{r}
DF$semdat %>% psych::cor.plot(.,stars = T)


DF$semdat %>% select(contains(c("x"))) %>% 
                         irr::icc()
DF$semdat %>% select(contains(c("y"))) %>% 
                         irr::icc()
DF$semdat %>% select(contains(c("z"))) %>% 
                         irr::icc()

```


# SEM
## Latent Groht
```{r}
#| warning: false
tic()
DF$lgcm = '
    # intercept and slope with fixed coefficients
    i =~ 1*y1 + 1*y2 + 1*y3
    s =~ 0*y1 + 2*y2 + 3*y3'
DF$lgcm.fit = growth(DF$lgcm, data=DF$semdat)
broom::glance(DF$lgcm.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% gt() %>% 
  fmt_number(decimals = 3, columns = c(cfi,tli,agfi,rmsea,srmr)) %>% gt_theme_nytimes()
broom::tidy(DF$lgcm.fit) %>% gt %>% fmt_number(decimals = 2) %>% fmt_number(decimals = 3, columns = c(p.value))
```


## RI-CLPM free
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm3k, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% gt() %>% 
  fmt_number(decimals = 3, columns = c(cfi,tli,agfi,rmsea,srmr)) %>% gt_theme_nytimes()
broom::tidy(DF$ric.fit) %>% filter(.,(op =="~" & grepl("Lx", term) & grepl("Ly", term) )|(op =="~" & grepl("Lx", term) & grepl("Lz", term))|(op =="~" & grepl("Ly", term) & grepl("Lz", term))) %>%
                                     select(., c(term, op, estimate,std.error,p.value,std.all)) %>%
                                     gt %>% 
  fmt_number(decimals = 2, columns = c(estimate,std.error,std.all)) %>% fmt_number(decimals = 3, columns = p.value) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,estimate,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3k3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```

::: {.hidden}
# Save DATA, if neccessary {.unnumbered .unlisted}
```{r, eval=FALSE}
#| include: false
# DF %>% qsave(., file = paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/text.qs"))
```
:::