---
title: "GLES Panel 2017-2021"
subtitle: "Wahlwerbung & Wahlabsicht"
author:
- "Reimar ZEH"
- "[Lehrstuhl für Kommunikationswissenschaft](https://www.kowi.rw.fau.de)"
- "Filename: *Recode ZA6838-ZA7729*"
date: "`r format(Sys.time(), '%m.%d.%Y')`"
editor: source
toc: true
number-sections: true
highlight-style: pygments
theme: cosmo
format:
  html: 
    code-fold: true
    code-overflow: wrap
    html-math-method: katex
    self-contained: true
    fig-width: 8
    fig-height: 6
execute: 
  echo: false
  eval: true
  warning: false
editor_options: 
  chunk_output_type: console
---
::: {.hidden}
# Session Setup  {.unnumbered .unlisted}
## Global settings & Notes
```{r}
rm(list= ls()) # start clean ####
# show chunk outputs in R-Markdown
knitr::opts_chunk$set(echo = TRUE)

# global settings
options(
  scipen = 999, # deactivate scientific notation
  digits = 3, # activate the required number of decimal places
  max.print = 1000000,
  tibble.print_max = 100000,
  tibble.print_min = 100000
)

# setting a seed
set.seed(42)
```

## Load Packages

```{r}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sjlabelled,foreign,tidyverse,sjmisc,Hmisc,gt,gtExtras,
               here,fs,usethis,labelled,janitor,magrittr,qs,tictoc,
               psych,easystats,irr,lavaan,semTools,semPlot,broom,tidySEM,GPArotation)
```

## Prepare Lists
```{r}
DF = list()
```
:::


# Prepare Analysis
## Load Data

```{r}
DF$orgdat = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_v6.qs"))
source(here("script/models.R"))
# toc()
```

## Select Vars
```{r}
DF$semdat = DF$orgdat %>% select(starts_with(c("n_participation","kp5_421","kp6_421","kp7_421","kp5_170","kp6_170","kp7_170","kpx_2290s","kp5_010","kp6_010","kp7_010")) &
                                   !contains(c("_1701","_1702")) & !contains("flag") & !ends_with("y"))

DF$semdat %<>% mutate(across(ends_with("_170"), ~rec(., rec = "-99,-97,-95,-93,-92=NA;6=1;else = copy")),
                     across(contains("_421"), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy")),
                     across(ends_with("_170"), ~rec(., rec = "rev")),
                     across(ends_with("_010"), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy")))
# DF$semdat %<>% mutate(across(ends_with("_010"), ~dicho(., dich.by = 2)))

DF$semdat %<>% mutate(alter = rec(kpx_2290s, rec ="1955 und frueher = 1955;else = copy"),
                      alter = as.numeric(alter),
                      alter = 2017- alter)
DF$semdat %<>% mutate(grp_age = cut(alter, breaks = c(0,29, Inf), labels = c("genZ", "Boomer")))
DF$semdat %<>% mutate(grp_polint = cut(kp5_010, breaks = c(0,2, Inf), labels = c("hohes polInt", "geringes PolInt")))

# DF$semdat %<>% mutate(grp_age = dicho(alter, dich.by = 29))
```



## Prepare VARS
```{r}

for (i in 5:7) {
  varnames <- c("_421d", "_421e", "_421b", "_421g")
  colnames <- c("_wwtv", "_wwra", "_wwfl", "_wwpl")
  
  for (j in seq_along(varnames)) {
    varname <- paste0("kp", i, varnames[j])
    colname <- paste0("kp", i, colnames[j])
    DF$semdat <- DF$semdat %>% 
      mutate(!!colname := as.numeric(rowSums(across(contains(varname)), na.rm = F) > 0))
  }
  coltot <- paste0("kp", i, "_waw")
  vartot <- paste0("kp", i, "_ww")
  DF$semdat <- DF$semdat %>% 
    mutate(!!coltot := rowSums(across(contains(!!vartot)), na.rm = F))
}
```


::: {.hidden}
## Check reliability
```{r}
#| results: asis
#| include: false
#| eval: false
wellen <- c("kp5", "kp6", "kp7")
for (j in seq_along(wellen)) {
  reli_obj <- paste0("reli_", wellen[j])
  DF$reli[[reli_obj]] = DF$semdat %>% select(contains("_ww") & starts_with(wellen[j])) %>% psych::alpha(., na.rm = TRUE, check.keys = TRUE, warnings = FALSE)
}
# DF$reli %>% map(., ~gt(.$total) %>% gt_theme_nytimes())
# DF$reli %>% map(., ~rownames_to_column(.$alpha.drop, "ITEM") %>% gt() %>% 
#                   tab_style(style = cell_text(color = "red", weight = "bold"), locations = cells_body(columns = ITEM, rows = std.alpha > 0.7 )))
```
:::

## Rename, select & delete VARS
```{r}
DF$semdat %<>% rename(x1 = kp5_170, x2 = kp6_170, x3 = kp7_170,
                     y1 = kp5_waw, y2 = kp6_waw, y3 = kp7_waw)
DF$semdat %<>% select(starts_with(c("x","y","grp","kp5_010")))
```


## Check Correlations Schulz
::: {.callout-important}
X(n) steht für die Variablen der Wahlbeteiligungsabsicht der Wellen 5-7<br>
Y(n) steht für die Variablen der Wahlwerbungskontakte der Wellen 5-7<br>
Operationalisierung analog zu Schulz 2022,
:::

## Check Correlations All Cases
```{r}
#| include: false
#| eval: false
DF$semdat %>% select(starts_with(c("x","y"))) %>% psych::cor.plot(.,stars = T)
```


## Check ICC All cases
Wahlbeteiligungsabsicht
```{r}
#| include: false
#| eval: false
# ICC requires VARs to be numeric, even when they seem to are numeric -> mutate!
DF$semdat %>% select(contains(c("x"))) %>% 
                         irr::icc()
```
Wahlwerbungskontakte
```{r}
#| include: false
#| eval: false
DF$semdat %>% select(contains(c("y"))) %>% 
                         irr::icc()
```

# SEM
::: {.callout-important}
Lx(n) steht für die latenten Variablen der Wahlbeteiligungsabsicht der Wellen 5-7<br>
Ly(n) steht für die latenten Variablen der Wahlwerbungskontakte der Wellen 5-7<br>
Operationalisierung analog zu Schulz 2022,
:::
## CLPM free All cases listwise, GRP_age
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_LG, data=DF$semdat, missing="listwise", estimator = "MLR", mimic="Mplus", meanstructure = T, group = "grp_age")
broom::glance(DF$sem.fit) %>% 
  select(., c(cfi,tli,agfi,rmsea,srmr,estimator,nobs,norig,missing_method,ngroups)) %>% 
  gt()%>% fmt_number(decimals = 3) %>% gt_theme_nytimes()
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% 
  select(., c(group,term, label, estimate,std.error,p.value,std.all)) %>%
  gt(groupname_col = "group") %>%
  fmt_number(decimals = 3) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,label,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```
## CLPM free All cases listwise, GRP Politisches Interesse
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_LG, data=DF$semdat, missing="listwise", estimator = "MLR", mimic="Mplus", meanstructure = T, group = "grp_polint")
broom::glance(DF$sem.fit) %>% 
  select(., c(cfi,tli,agfi,rmsea,srmr,estimator,nobs,norig,missing_method,ngroups)) %>% 
  gt()%>% fmt_number(decimals = 3) %>% gt_theme_nytimes()
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% 
  select(., c(group,term, label, estimate,std.error,p.value,std.all)) %>% gt(groupname_col = "group") %>% 
  fmt_number(decimals = 3) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,label,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

# RI-CLPM All Cases listwise GRP_Age
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpmG, data=DF$semdat, missing="listwise", estimator = "MLR", mimic="Mplus", meanstructure = T, group = "grp_age")
broom::glance(DF$ric.fit) %>% 
  select(., c(cfi,tli,agfi,rmsea,srmr,estimator,nobs,norig,missing_method)) %>% 
  gt() %>% fmt_number(decimals = 3) %>% gt_theme_nytimes()
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% 
  select(., c(group,term, label, estimate,std.error,p.value,std.all)) %>% gt(groupname_col = "group") %>% 
  fmt_number(decimals = 2) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,label,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```

# RI-CLPM All Cases listwise GRP Politisches Interesse
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpmG, data=DF$semdat, missing="listwise", estimator = "MLR", mimic="Mplus", meanstructure = T, group = "grp_polint")
broom::glance(DF$ric.fit) %>% 
  select(., c(cfi,tli,agfi,rmsea,srmr,estimator,nobs,norig,missing_method)) %>% 
  gt() %>% fmt_number(decimals = 3) %>% gt_theme_nytimes()
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% 
  select(., c(group,term, label, estimate,std.error,p.value,std.all)) %>% gt(groupname_col = "group") %>% 
  fmt_number(decimals = 2) %>%
  tab_style(style = cell_fill(color = "lightgreen"), locations = cells_body(columns = c(term,label,std.all), rows = p.value < 0.05)) %>%
  gt_theme_nytimes()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```