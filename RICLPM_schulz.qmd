---
title: "RECODE GLES Panel"
subtitle: "Internet vs Social Media-Nutzung"
author:
- "Reimar ZEH"
- "[Lehrstuhl fÃ¼r Kommunikationswissenschaft](https://www.kowi.rw.fau.de)"
- "Filename: *Recode ZA6838-ZA7729*"
date: "`r format(Sys.time(), '%m.%d.%Y')`"
editor: source
toc: true
number-sections: true
highlight-style: pygments
theme: cosmo
format:
  html: 
    code-fold: true
    code-overflow: wrap
    html-math-method: katex
    self-contained: true
execute: 
  echo: false
  eval: true
  warning: false
editor_options: 
  chunk_output_type: console
---

# Session Setup

## Global settings & Notes

```{r}
rm(list= ls()) # start clean ####
# show chunk outputs in R-Markdown
knitr::opts_chunk$set(echo = TRUE)

# global settings
options(
  scipen = 999, # deactivate scientific notation
  digits = 3, # activate the required number of decimal places
  max.print = 1000000,
  tibble.print_max = 100000,
  tibble.print_min = 100000
)

# setting a seed
set.seed(42)
```

## Load Packages

```{r}
rm(list= ls()) # start clean ####
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sjlabelled,foreign,tidyverse,sjmisc,Hmisc,flextable,
               here,fs,usethis,labelled,janitor,magrittr,qs,tictoc,
               psych,easystats,irr,lavaan,semTools,semPlot,broom,tidySEM)
```

## Prepare Lists

```{r}
DF = list()
```

## Load Data

```{r}
# load(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.Rda"))
# tic()
DF$orgdat = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.qs"))
source(here("script/models.R"))
# toc()
```


# Prepare Analysis
## Select Vars
```{r}
DF$semdat = DF$orgdat %>% select(contains(c("_421i","_421b","_421e","_421g","_421d","_170")) & !contains(c("_1701","_1702")) & !ends_with("flag") & !ends_with("y") & starts_with(c("kp5","kp6","kp7")))
head(DF$semdat)
DF$semdat %<>% mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93=NA;6=1; else = copy")))
DF$semdat %<>% mutate(kp5_wwtv = rowSums(across(contains("kp5_421d")),na.rm = F),
                      kp5_wwtv = dicho(kp5_wwtv, dich.by =  0),
                      kp6_wwtv = rowSums(across(contains("kp6_421d")),na.rm = F),
                      kp6_wwtv = as.numeric(kp6_wwtv > 0),
                      kp7_wwtv = rowSums(across(contains("kp7_421d")),na.rm = F),
                      kp7_wwtv = as.numeric(kp7_wwtv > 0),
                      kp5_wwra = rowSums(across(contains("kp5_421e")),na.rm = F),
                      kp5_wwra = as.numeric(kp5_wwra > 0),
                      kp6_wwra = rowSums(across(contains("kp6_421e")),na.rm = F),
                      kp6_wwra = as.numeric(kp6_wwra > 0),
                      kp7_wwra = rowSums(across(contains("kp7_421e")),na.rm = F),
                      kp7_wwra = as.numeric(kp7_wwra > 0),
                      kp5_wwpl = rowSums(across(contains("kp5_421g")),na.rm = F),
                      kp5_wwpl = as.numeric(kp5_wwpl > 0),
                      kp6_wwpl = rowSums(across(contains("kp6_421g")),na.rm = F),
                      kp6_wwpl = as.numeric(kp6_wwpl > 0),
                      kp7_wwpl = rowSums(across(contains("kp7_421g")),na.rm = F),
                      kp7_wwpl = as.numeric(kp7_wwpl > 0),
                      kp5_wwfl = rowSums(across(contains("kp5_421b")),na.rm = F),
                      kp5_wwfl = as.numeric(kp5_wwfl > 0),
                      kp6_wwfl = rowSums(across(contains("kp6_421b")),na.rm = F),
                      kp6_wwfl = as.numeric(kp6_wwfl > 0),
                      kp7_wwfl = rowSums(across(contains("kp7_421b")),na.rm = F),
                      kp7_wwfl = as.numeric(kp7_wwfl > 0))
DF$semdat %<>% mutate(kp5_totww = rowSums(across(contains("kp5_ww")),na.rm =F),
                      kp6_totww = rowSums(across(contains("kp6_ww")),na.rm =F),
                      kp7_totww = rowSums(across(contains("kp7_ww")),na.rm =F))
DF$semdat %<>% rename(x1 = kp5_totww, x2 = kp6_totww, x3 = kp7_totww,
                      y1 = kp5_170, y2 = kp6_170, y3 = kp7_170)
DF$semdat = DF$semdat %>% select(starts_with(c("x","y")))
```



## Check FRQ

```{r}
# tic()
DF$semdat %>% summary(.,maxsum = 20) %>% knitr::kable(.,format= 'markdown')

# toc()
```

## Prepare VARS
```{r}
DF$semdat %<>% mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93=NA;else = copy")))
# names(DF$semdat)<- c("m1", "m2", "m3", "w1", "w2", "w3")
```


## Check Correlations
```{r}
DF$semdat %>% psych::cor.plot(.,stars = T)
DF$semdat %>% psych::cor.plot(.,stars = T)

# DF$semdat_long %>% select(!"Welle") %>% 
#   mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy"))) %>%
#   drop_na() %>% 
#   psych::corr.test()
# DF$semdat %>% mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy"))) %>%
#   gather(key, value) %>% drop_na() %>% 
#   separate_wider_delim(key, delim = "_", names = c("Welle", "Var")) %>%
#   ggplot(aes(x = value, color = Welle)) +
#   geom_density(adjust = 1.6) + 
#   facet_wrap(vars(Var)) + 
#   theme_classic()

```

## Check ICC
```{r}
# ICC requires VARs to be numeric, even when they seem to are numeric -> mutate!

DF$semdat %>% select(contains(c("x"))) %>% 
                         irr::icc()
DF$semdat %>% select(contains(c("y"))) %>% 
                         irr::icc()
```


# SEM

## CLPM fixed
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_LC, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## CLPM free
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_L, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## CLPM Latent 2 Lag
```{r}
#| warning: false
tic()
DF$sem.fit <- lavaan::sem(DF$clpm_L2, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$sem.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$sem.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
DF$cl_layout = openxlsx::read.xlsx(here("script/Clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$cl_graph = prepare_graph(DF$sem.fit, layout = DF$cl_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>% edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$cl_graph)
toc()
```

## RI-CLPM fixed
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpmC, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```


## RI-CLPM free
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm, data=DF$semdat, missing="listwise", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,AIC,BIC)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```

::: {.hidden}
# Save DATA, if neccessary {.unnumbered .unlisted}
```{r, eval=FALSE}
#| include: false
# DF %>% qsave(., file = paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/text.qs"))
```
:::