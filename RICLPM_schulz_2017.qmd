---
title: "GLES Panel 2017-2021"
subtitle: "Wahlwerbung & Wahlabsicht"
author:
- "Reimar ZEH"
- "[Lehrstuhl für Kommunikationswissenschaft](https://www.kowi.rw.fau.de)"
- "Filename: *Recode ZA6838-ZA7729*"
date: "`r format(Sys.time(), '%m.%d.%Y')`"
editor: source
toc: true
number-sections: true
highlight-style: pygments
theme: cosmo
format:
  html: 
    code-fold: true
    code-overflow: wrap
    html-math-method: katex
    self-contained: true
    max-width: 1400px
execute: 
  echo: false
  eval: true
  warning: false
editor_options: 
  chunk_output_type: console
---

# Session Setup

## Global settings & Notes

```{r}
rm(list= ls()) # start clean ####
# show chunk outputs in R-Markdown
knitr::opts_chunk$set(echo = TRUE)

# global settings
options(
  scipen = 999, # deactivate scientific notation
  digits = 3, # activate the required number of decimal places
  max.print = 1000000,
  tibble.print_max = 100000,
  tibble.print_min = 100000
)

# setting a seed
set.seed(42)
```

## Load Packages

```{r}
rm(list= ls()) # start clean ####
if (!require("pacman")) install.packages("pacman")
pacman::p_load(sjlabelled,foreign,tidyverse,sjmisc,Hmisc,flextable,
               here,fs,usethis,labelled,janitor,magrittr,qs,tictoc,
               psych,easystats,irr,lavaan,semTools,semPlot,broom,tidySEM,GPArotation)
```

## Prepare Lists

```{r}
DF = list()
```

## Load Data

```{r}
# load(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.Rda"))
# tic()
DF$orgdat = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6838_7729.qs"))
DF$za6804v7 = qread(paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/za6804_v7.qs"))
source(here("script/models.R"))
# toc()
```


# Prepare Analysis
## Select Vars
```{r}
DF$semdat = DF$orgdat %>% select(starts_with(c("n_participation","kp5_421","kp6_421","kp7_421","kp5_170","kp6_170","kp7_170")) &
                                   !contains(c("_1701","_1702")) & !ends_with(c("flag","y")))

DF$semdat %<>% mutate(across(ends_with("_170"), ~rec(., rec = "-99,-97,-95,-93,-92=NA;6=1;else = copy")),
                     across(contains("_421"), ~rec(., rec = "-99,-97,-95,-93,-92=NA;else = copy")),
                     across(ends_with("_170"), ~rec(., rec = "rev")))

DF$ws21_efa = DF$semdat %>% select(contains("_421") & starts_with("kp5") & ends_with("a"))

```


::: {.hidden}
## Check FRQ  {quarto:ignore=true}

```{r}
#| include: false
# tic()
DF$semdat %>% summary(.,maxsum = 20) %>% knitr::kable(.,format= 'markdown')

# toc()
```

## Preliminary Analyse {quarto:ignore=true}


```{r}
#| include: false
parameters::n_factors(DF$ws21_efa) %>% knitr::kable(.,format= 'markdown')
DF$ws21_efa %>% summary(.,maxsum = 20) %>% knitr::kable(.,format= 'markdown')
DF$ws21_efa %>% psych::cor.plot(.,stars = T)
DF$ws21_efa.fa = fa(DF$ws21_efa, nfactors = 2, fm = "ml", rotate = "oblimin", scores = "regression", use = "pairwise.complete.obs")
DF$ws21_efa.fa %>% model_parameters(sort=T, threshold = "max") %>% knitr::kable(.,format= 'markdown')
DF$w14_effi = factor.scores(DF$ws21_efa,DF$ws21_efa.fa)
# DF$semdat_1 %>% mutate(across(everything(), ~rec(., rec = "-99,-95,-93,-92=NA; else = copy"))) %>%
#   psych::cor.plot(.,stars = T)
```
:::

## Prepare VARS
```{r}
# DF$semdat %<>% mutate(across(everything(), ~rec(., rec = "-99,-97,-95,-93=NA;else = copy")))
# names(DF$semdat)<- c("m1", "m2", "m3", "w1", "w2", "w3")
DF$semdat %<>% mutate(kp5_wwtv = rowSums(across(contains("kp5_421d")),na.rm = F),
                     kp5_wwtv = as.numeric(kp5_wwtv >0),
                     kp5_wwra = rowSums(across(contains("kp5_421e")),na.rm = F),
                     kp5_wwra = as.numeric(kp5_wwra > 0),
                     kp5_wwfl = rowSums(across(contains("kp5_421b")),na.rm = F),
                     kp5_wwfl = as.numeric(kp5_wwfl > 0),
                     kp5_wwpl = rowSums(across(contains("kp5_421g")),na.rm = F),
                     kp5_wwpl = as.numeric(kp5_wwpl > 0),
                     kp6_wwtv = rowSums(across(contains("kp6_421d")),na.rm = F),
                     kp6_wwtv = as.numeric(kp6_wwtv >0),
                     kp6_wwra = rowSums(across(contains("kp6_421e")),na.rm = F),
                     kp6_wwra = as.numeric(kp6_wwra > 0),
                     kp6_wwfl = rowSums(across(contains("kp6_421b")),na.rm = F),
                     kp6_wwfl = as.numeric(kp6_wwfl > 0),
                     kp6_wwpl = rowSums(across(contains("kp6_421g")),na.rm = F),
                     kp6_wwpl = as.numeric(kp6_wwpl > 0),
                     kp7_wwtv = rowSums(across(contains("kp7_421d")),na.rm = F),
                     kp7_wwtv = as.numeric(kp7_wwtv >0),
                     kp7_wwra = rowSums(across(contains("kp7_421e")),na.rm = F),
                     kp7_wwra = as.numeric(kp7_wwra > 0),
                     kp7_wwfl = rowSums(across(contains("kp7_421b")),na.rm = F),
                     kp7_wwfl = as.numeric(kp7_wwfl > 0),
                     kp7_wwpl = rowSums(across(contains("kp7_421g")),na.rm = F),
                     kp7_wwpl = as.numeric(kp7_wwpl > 0),
                     kp5_waw = rowSums(across(contains("kp5_ww")),na.rm =F),
                     kp6_waw = rowSums(across(contains("kp6_ww")),na.rm =F),
                     kp7_waw = rowSums(across(contains("kp7_ww")),na.rm =F))
DF$semdat %<>% rename(x1 = kp5_170, x2 = kp6_170, x3 = kp7_170,
                     y1 = kp5_waw, y2 = kp6_waw, y3 = kp7_waw)
# Filter W. Schulz
DF$wsdat = DF$semdat %>% filter(n_participation == 9)
DF$wsdat %<>% select(starts_with(c("x","y")))
DF$semdat %<>% select(starts_with(c("x","y")))

```



## Check Correlations Schulz
```{r}
DF$wsdat %>% psych::cor.plot(.,stars = T)
```

## Check Correlations All Cases
```{r}
DF$semdat %>% psych::cor.plot(.,stars = T)
```


## Check ICC Schulz
```{r}
# ICC requires VARs to be numeric, even when they seem to are numeric -> mutate!
cat("Wahlabsicht")
DF$wsdat %>% select(contains(c("x"))) %>% 
                         irr::icc()
cat("Wahlwerbung")
DF$wsdat %>% select(contains(c("y"))) %>% 
                         irr::icc()
```

## Check ICC All cases
```{r}
# ICC requires VARs to be numeric, even when they seem to are numeric -> mutate!
cat("Wahlabsicht")
DF$semdat %>% select(contains(c("x"))) %>% 
                         irr::icc()
cat("Wahlwerbung")
DF$semdat %>% select(contains(c("y"))) %>% 
                         irr::icc()
```


# SEM
::: {.callout-important}
Lx(n) steht für die Latenten Variablen der Wahlbeteligungsabsicht der Wellen 5-7<br>
Ly(n) steht für die Latenten Variablen der Wahlwerbungskontakte der Wellen 5-7<br>
Operationalisierung analog zu Schulz 2022,
:::
## RI-CLPM MuK Schulz
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm, data=DF$wsdat, missing="listwise", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,estimator,nobs,norig,missing_method)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```

## RI-CLPM All Cases listwise
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm, data=DF$semdat, missing="listwise", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,estimator,nobs,norig,missing_method)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```

## RI-CLPM All Cases Missings ML-estimated
```{r}
#| warning: false
tic()
DF$ric.fit <- lavaan::sem(DF$riclpm, data=DF$semdat, missing="ML", estimator = "MLR", mimic="Mplus", meanstructure = T)
broom::glance(DF$ric.fit) %>% select(., c(cfi,tli,agfi,rmsea,srmr,estimator,nobs,norig,missing_method)) %>% mutate(across(where(is.double), round, 3))
broom::tidy(DF$ric.fit) %>% filter(., op =="~") %>% mutate(across(where(is.double), round, 3)) %>% 
  select(., c(term, label, op, estimate,std.error,p.value,std.all)) %>% 
  flextable() %>% theme_zebra() %>% 
  color(., i = ~ p.value < 0.05,j = ~ term + p.value + std.all, color="blue") %>%
  bold(., i = ~ p.value < 0.05 & op == "~",j = ~ term + p.value + std.all, bold=T) %>% autofit()
RI_layout = openxlsx::read.xlsx(here("script/RI-clpm_t3_layout.xlsx")) %>%
  mutate(across(everything(), ~rec(., rec = "-99=NA;else = copy")))
DF$ric_graph = prepare_graph(DF$ric.fit, layout = RI_layout) %>% edit_graph({label_location = 0.8}, element = "edges") %>%edit_graph({ label = paste(est_sig_std)}, element="edges")
plot(DF$ric_graph)
toc()
```



::: {.hidden}
# Save DATA, if neccessary {.unnumbered .unlisted}
```{r, eval=FALSE}
#| include: false
# DF %>% qsave(., file = paste0(Sys.getenv("FAUBOX"),"/GLES/za6838/text.qs"))
```
:::